# Process PostgreSQL logs

input {
  beats {
    port => 5044
  }
}

filter {
  if [type] == "pg_log" {
    multiline {
      pattern => "^\s"
      what    => "previous"
    }
    grok {
      match        => { "message" => "start_prefix%{GREEDYDATA:log_line_prefix}end_prefix log_line: %{GREEDYDATA:log_line}" }
      remove_field => [ "message" ]
    }
    json {
      source       => log_line_prefix
      remove_field => [ "log_line_prefix" ]
    }
    mutate {
      gsub => [
        "log_time", ".{5}$", ""
      ]
    }
    date {
      match        => ["log_time", "yyyy-MM-dd HH:mm:ss.SSS"]
      timezone     => "Europe/Amsterdam"
      remove_field => [ "log_time" ]
    }
    if [command_tag] == "SELECT" or [command_tag] == "UPDATE" or [command_tag] == "INSERT" or [command_tag] == "DELETE" or [command_tag] == "RELEASE" or [command_tag] == "SAVEPOINT" or [command_tag] == "SET" or [command_tag] == "PARSE" or [command_tag] == "DISCARD ALL" {
      grok {
        match => { "log_line" => "LOG:  duration: %{BASE10NUM:duration:float}" }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => [ 'elasticsearch' ]
    index => "logstash-filebeat-postgres-%{+YYYY.MM.dd}"
  }
}
